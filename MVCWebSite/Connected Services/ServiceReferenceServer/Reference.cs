//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCWebSite.ServiceReferenceServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credenziali", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class Credenziali : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RuoloField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Utente UtenteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ruolo {
            get {
                return this.RuoloField;
            }
            set {
                if ((object.ReferenceEquals(this.RuoloField, value) != true)) {
                    this.RuoloField = value;
                    this.RaisePropertyChanged("Ruolo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Utente Utente {
            get {
                return this.UtenteField;
            }
            set {
                if ((object.ReferenceEquals(this.UtenteField, value) != true)) {
                    this.UtenteField = value;
                    this.RaisePropertyChanged("Utente");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utente", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class Utente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AttivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CognomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataNascitaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Luogo IndirizzoSpedizioneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PortafoglioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocietaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Attivo {
            get {
                return this.AttivoField;
            }
            set {
                if ((this.AttivoField.Equals(value) != true)) {
                    this.AttivoField = value;
                    this.RaisePropertyChanged("Attivo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cognome {
            get {
                return this.CognomeField;
            }
            set {
                if ((object.ReferenceEquals(this.CognomeField, value) != true)) {
                    this.CognomeField = value;
                    this.RaisePropertyChanged("Cognome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataNascita {
            get {
                return this.DataNascitaField;
            }
            set {
                if ((this.DataNascitaField.Equals(value) != true)) {
                    this.DataNascitaField = value;
                    this.RaisePropertyChanged("DataNascita");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Luogo IndirizzoSpedizione {
            get {
                return this.IndirizzoSpedizioneField;
            }
            set {
                if ((object.ReferenceEquals(this.IndirizzoSpedizioneField, value) != true)) {
                    this.IndirizzoSpedizioneField = value;
                    this.RaisePropertyChanged("IndirizzoSpedizione");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Portafoglio {
            get {
                return this.PortafoglioField;
            }
            set {
                if ((this.PortafoglioField.Equals(value) != true)) {
                    this.PortafoglioField = value;
                    this.RaisePropertyChanged("Portafoglio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Societa {
            get {
                return this.SocietaField;
            }
            set {
                if ((object.ReferenceEquals(this.SocietaField, value) != true)) {
                    this.SocietaField = value;
                    this.RaisePropertyChanged("Societa");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Luogo", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class Luogo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CittaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CivicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NazioneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Citta {
            get {
                return this.CittaField;
            }
            set {
                if ((object.ReferenceEquals(this.CittaField, value) != true)) {
                    this.CittaField = value;
                    this.RaisePropertyChanged("Citta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Civico {
            get {
                return this.CivicoField;
            }
            set {
                if ((object.ReferenceEquals(this.CivicoField, value) != true)) {
                    this.CivicoField = value;
                    this.RaisePropertyChanged("Civico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nazione {
            get {
                return this.NazioneField;
            }
            set {
                if ((object.ReferenceEquals(this.NazioneField, value) != true)) {
                    this.NazioneField = value;
                    this.RaisePropertyChanged("Nazione");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Via {
            get {
                return this.ViaField;
            }
            set {
                if ((object.ReferenceEquals(this.ViaField, value) != true)) {
                    this.ViaField = value;
                    this.RaisePropertyChanged("Via");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Carrello", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class Carrello : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostoTotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Prodotto ProdottoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantitaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Utente UtenteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CostoTot {
            get {
                return this.CostoTotField;
            }
            set {
                if ((this.CostoTotField.Equals(value) != true)) {
                    this.CostoTotField = value;
                    this.RaisePropertyChanged("CostoTot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Prodotto Prodotto {
            get {
                return this.ProdottoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdottoField, value) != true)) {
                    this.ProdottoField = value;
                    this.RaisePropertyChanged("Prodotto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantita {
            get {
                return this.QuantitaField;
            }
            set {
                if ((this.QuantitaField.Equals(value) != true)) {
                    this.QuantitaField = value;
                    this.RaisePropertyChanged("Quantita");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Utente Utente {
            get {
                return this.UtenteField;
            }
            set {
                if ((object.ReferenceEquals(this.UtenteField, value) != true)) {
                    this.UtenteField = value;
                    this.RaisePropertyChanged("Utente");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prodotto", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class Prodotto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ASINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostoProdottoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostoResoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescrizioneProdottoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImmagineProdottoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeProdottoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantitaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaglieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempoSpedizioneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Utente VenditoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ASIN {
            get {
                return this.ASINField;
            }
            set {
                if ((object.ReferenceEquals(this.ASINField, value) != true)) {
                    this.ASINField = value;
                    this.RaisePropertyChanged("ASIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categoria {
            get {
                return this.CategoriaField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriaField, value) != true)) {
                    this.CategoriaField = value;
                    this.RaisePropertyChanged("Categoria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CostoProdotto {
            get {
                return this.CostoProdottoField;
            }
            set {
                if ((this.CostoProdottoField.Equals(value) != true)) {
                    this.CostoProdottoField = value;
                    this.RaisePropertyChanged("CostoProdotto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CostoReso {
            get {
                return this.CostoResoField;
            }
            set {
                if ((this.CostoResoField.Equals(value) != true)) {
                    this.CostoResoField = value;
                    this.RaisePropertyChanged("CostoReso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescrizioneProdotto {
            get {
                return this.DescrizioneProdottoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescrizioneProdottoField, value) != true)) {
                    this.DescrizioneProdottoField = value;
                    this.RaisePropertyChanged("DescrizioneProdotto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImmagineProdotto {
            get {
                return this.ImmagineProdottoField;
            }
            set {
                if ((object.ReferenceEquals(this.ImmagineProdottoField, value) != true)) {
                    this.ImmagineProdottoField = value;
                    this.RaisePropertyChanged("ImmagineProdotto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Materiale {
            get {
                return this.MaterialeField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialeField, value) != true)) {
                    this.MaterialeField = value;
                    this.RaisePropertyChanged("Materiale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomeProdotto {
            get {
                return this.NomeProdottoField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeProdottoField, value) != true)) {
                    this.NomeProdottoField = value;
                    this.RaisePropertyChanged("NomeProdotto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantita {
            get {
                return this.QuantitaField;
            }
            set {
                if ((this.QuantitaField.Equals(value) != true)) {
                    this.QuantitaField = value;
                    this.RaisePropertyChanged("Quantita");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Taglie {
            get {
                return this.TaglieField;
            }
            set {
                if ((object.ReferenceEquals(this.TaglieField, value) != true)) {
                    this.TaglieField = value;
                    this.RaisePropertyChanged("Taglie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempoSpedizione {
            get {
                return this.TempoSpedizioneField;
            }
            set {
                if ((object.ReferenceEquals(this.TempoSpedizioneField, value) != true)) {
                    this.TempoSpedizioneField = value;
                    this.RaisePropertyChanged("TempoSpedizione");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Utente Venditore {
            get {
                return this.VenditoreField;
            }
            set {
                if ((object.ReferenceEquals(this.VenditoreField, value) != true)) {
                    this.VenditoreField = value;
                    this.RaisePropertyChanged("Venditore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompraVendita", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class CompraVendita : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Prodotto ProdottoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char TipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Utente UtenteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Prodotto Prodotto {
            get {
                return this.ProdottoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdottoField, value) != true)) {
                    this.ProdottoField = value;
                    this.RaisePropertyChanged("Prodotto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Qt {
            get {
                return this.QtField;
            }
            set {
                if ((this.QtField.Equals(value) != true)) {
                    this.QtField = value;
                    this.RaisePropertyChanged("Qt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Tipo {
            get {
                return this.TipoField;
            }
            set {
                if ((this.TipoField.Equals(value) != true)) {
                    this.TipoField = value;
                    this.RaisePropertyChanged("Tipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Utente Utente {
            get {
                return this.UtenteField;
            }
            set {
                if ((object.ReferenceEquals(this.UtenteField, value) != true)) {
                    this.UtenteField = value;
                    this.RaisePropertyChanged("Utente");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Valutazione", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class Valutazione : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Prodotto ProdottoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecensioneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StelleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCWebSite.ServiceReferenceServer.Utente UtenteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Prodotto Prodotto {
            get {
                return this.ProdottoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdottoField, value) != true)) {
                    this.ProdottoField = value;
                    this.RaisePropertyChanged("Prodotto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recensione {
            get {
                return this.RecensioneField;
            }
            set {
                if ((object.ReferenceEquals(this.RecensioneField, value) != true)) {
                    this.RecensioneField = value;
                    this.RaisePropertyChanged("Recensione");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stelle {
            get {
                return this.StelleField;
            }
            set {
                if ((this.StelleField.Equals(value) != true)) {
                    this.StelleField = value;
                    this.RaisePropertyChanged("Stelle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCWebSite.ServiceReferenceServer.Utente Utente {
            get {
                return this.UtenteField;
            }
            set {
                if ((object.ReferenceEquals(this.UtenteField, value) != true)) {
                    this.UtenteField = value;
                    this.RaisePropertyChanged("Utente");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceServer.IServiceServer")]
    public interface IServiceServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/VerifyUserIdentity", ReplyAction="http://tempuri.org/IServiceServer/VerifyUserIdentityResponse")]
        bool VerifyUserIdentity(MVCWebSite.ServiceReferenceServer.Credenziali user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/VerifyUserIdentity", ReplyAction="http://tempuri.org/IServiceServer/VerifyUserIdentityResponse")]
        System.Threading.Tasks.Task<bool> VerifyUserIdentityAsync(MVCWebSite.ServiceReferenceServer.Credenziali user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetIDActiveUser", ReplyAction="http://tempuri.org/IServiceServer/GetIDActiveUserResponse")]
        string GetIDActiveUser(MVCWebSite.ServiceReferenceServer.Credenziali user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetIDActiveUser", ReplyAction="http://tempuri.org/IServiceServer/GetIDActiveUserResponse")]
        System.Threading.Tasks.Task<string> GetIDActiveUserAsync(MVCWebSite.ServiceReferenceServer.Credenziali user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AddUserWithTransaction", ReplyAction="http://tempuri.org/IServiceServer/AddUserWithTransactionResponse")]
        bool AddUserWithTransaction(MVCWebSite.ServiceReferenceServer.Credenziali userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AddUserWithTransaction", ReplyAction="http://tempuri.org/IServiceServer/AddUserWithTransactionResponse")]
        System.Threading.Tasks.Task<bool> AddUserWithTransactionAsync(MVCWebSite.ServiceReferenceServer.Credenziali userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAllElementCarrello", ReplyAction="http://tempuri.org/IServiceServer/GetAllElementCarrelloResponse")]
        MVCWebSite.ServiceReferenceServer.Carrello[] GetAllElementCarrello(MVCWebSite.ServiceReferenceServer.Credenziali user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAllElementCarrello", ReplyAction="http://tempuri.org/IServiceServer/GetAllElementCarrelloResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Carrello[]> GetAllElementCarrelloAsync(MVCWebSite.ServiceReferenceServer.Credenziali user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAllProdottiSeller", ReplyAction="http://tempuri.org/IServiceServer/GetAllProdottiSellerResponse")]
        MVCWebSite.ServiceReferenceServer.Prodotto[] GetAllProdottiSeller(MVCWebSite.ServiceReferenceServer.Credenziali user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAllProdottiSeller", ReplyAction="http://tempuri.org/IServiceServer/GetAllProdottiSellerResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto[]> GetAllProdottiSellerAsync(MVCWebSite.ServiceReferenceServer.Credenziali user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAllProdotti", ReplyAction="http://tempuri.org/IServiceServer/GetAllProdottiResponse")]
        MVCWebSite.ServiceReferenceServer.Prodotto[] GetAllProdotti(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAllProdotti", ReplyAction="http://tempuri.org/IServiceServer/GetAllProdottiResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto[]> GetAllProdottiAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetSingleProduct", ReplyAction="http://tempuri.org/IServiceServer/GetSingleProductResponse")]
        MVCWebSite.ServiceReferenceServer.Prodotto GetSingleProduct(string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetSingleProduct", ReplyAction="http://tempuri.org/IServiceServer/GetSingleProductResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto> GetSingleProductAsync(string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetProductByCategory", ReplyAction="http://tempuri.org/IServiceServer/GetProductByCategoryResponse")]
        MVCWebSite.ServiceReferenceServer.Prodotto[] GetProductByCategory(string Categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetProductByCategory", ReplyAction="http://tempuri.org/IServiceServer/GetProductByCategoryResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto[]> GetProductByCategoryAsync(string Categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AddProdotto", ReplyAction="http://tempuri.org/IServiceServer/AddProdottoResponse")]
        bool AddProdotto(MVCWebSite.ServiceReferenceServer.Prodotto prodotto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AddProdotto", ReplyAction="http://tempuri.org/IServiceServer/AddProdottoResponse")]
        System.Threading.Tasks.Task<bool> AddProdottoAsync(MVCWebSite.ServiceReferenceServer.Prodotto prodotto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/DeleteProdotto", ReplyAction="http://tempuri.org/IServiceServer/DeleteProdottoResponse")]
        bool DeleteProdotto(MVCWebSite.ServiceReferenceServer.Prodotto prodotto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/DeleteProdotto", ReplyAction="http://tempuri.org/IServiceServer/DeleteProdottoResponse")]
        System.Threading.Tasks.Task<bool> DeleteProdottoAsync(MVCWebSite.ServiceReferenceServer.Prodotto prodotto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/UpdateProdotto", ReplyAction="http://tempuri.org/IServiceServer/UpdateProdottoResponse")]
        bool UpdateProdotto(MVCWebSite.ServiceReferenceServer.Prodotto prodotto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/UpdateProdotto", ReplyAction="http://tempuri.org/IServiceServer/UpdateProdottoResponse")]
        System.Threading.Tasks.Task<bool> UpdateProdottoAsync(MVCWebSite.ServiceReferenceServer.Prodotto prodotto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AddCartProduct", ReplyAction="http://tempuri.org/IServiceServer/AddCartProductResponse")]
        bool AddCartProduct(MVCWebSite.ServiceReferenceServer.Carrello carrello);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AddCartProduct", ReplyAction="http://tempuri.org/IServiceServer/AddCartProductResponse")]
        System.Threading.Tasks.Task<bool> AddCartProductAsync(MVCWebSite.ServiceReferenceServer.Carrello carrello);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckIfAlreadyExistInCartUser", ReplyAction="http://tempuri.org/IServiceServer/CheckIfAlreadyExistInCartUserResponse")]
        int CheckIfAlreadyExistInCartUser(MVCWebSite.ServiceReferenceServer.Carrello carrello);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckIfAlreadyExistInCartUser", ReplyAction="http://tempuri.org/IServiceServer/CheckIfAlreadyExistInCartUserResponse")]
        System.Threading.Tasks.Task<int> CheckIfAlreadyExistInCartUserAsync(MVCWebSite.ServiceReferenceServer.Carrello carrello);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/UpdateCartProduct", ReplyAction="http://tempuri.org/IServiceServer/UpdateCartProductResponse")]
        bool UpdateCartProduct(MVCWebSite.ServiceReferenceServer.Carrello carrello);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/UpdateCartProduct", ReplyAction="http://tempuri.org/IServiceServer/UpdateCartProductResponse")]
        System.Threading.Tasks.Task<bool> UpdateCartProductAsync(MVCWebSite.ServiceReferenceServer.Carrello carrello);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetCredito", ReplyAction="http://tempuri.org/IServiceServer/GetCreditoResponse")]
        double GetCredito(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetCredito", ReplyAction="http://tempuri.org/IServiceServer/GetCreditoResponse")]
        System.Threading.Tasks.Task<double> GetCreditoAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckIfQtIsOk", ReplyAction="http://tempuri.org/IServiceServer/CheckIfQtIsOkResponse")]
        bool CheckIfQtIsOk(string ASIN, int qt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckIfQtIsOk", ReplyAction="http://tempuri.org/IServiceServer/CheckIfQtIsOkResponse")]
        System.Threading.Tasks.Task<bool> CheckIfQtIsOkAsync(string ASIN, int qt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/DeleteProductFromCart", ReplyAction="http://tempuri.org/IServiceServer/DeleteProductFromCartResponse")]
        bool DeleteProductFromCart(MVCWebSite.ServiceReferenceServer.Carrello carrello);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/DeleteProductFromCart", ReplyAction="http://tempuri.org/IServiceServer/DeleteProductFromCartResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductFromCartAsync(MVCWebSite.ServiceReferenceServer.Carrello carrello);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/UpdatePortafoglio", ReplyAction="http://tempuri.org/IServiceServer/UpdatePortafoglioResponse")]
        bool UpdatePortafoglio(MVCWebSite.ServiceReferenceServer.Utente utente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/UpdatePortafoglio", ReplyAction="http://tempuri.org/IServiceServer/UpdatePortafoglioResponse")]
        System.Threading.Tasks.Task<bool> UpdatePortafoglioAsync(MVCWebSite.ServiceReferenceServer.Utente utente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetProductQtAviable", ReplyAction="http://tempuri.org/IServiceServer/GetProductQtAviableResponse")]
        int GetProductQtAviable(string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetProductQtAviable", ReplyAction="http://tempuri.org/IServiceServer/GetProductQtAviableResponse")]
        System.Threading.Tasks.Task<int> GetProductQtAviableAsync(string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/ShopProducts", ReplyAction="http://tempuri.org/IServiceServer/ShopProductsResponse")]
        bool ShopProducts(MVCWebSite.ServiceReferenceServer.Credenziali utente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/ShopProducts", ReplyAction="http://tempuri.org/IServiceServer/ShopProductsResponse")]
        System.Threading.Tasks.Task<bool> ShopProductsAsync(MVCWebSite.ServiceReferenceServer.Credenziali utente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetVendite", ReplyAction="http://tempuri.org/IServiceServer/GetVenditeResponse")]
        MVCWebSite.ServiceReferenceServer.CompraVendita[] GetVendite(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetVendite", ReplyAction="http://tempuri.org/IServiceServer/GetVenditeResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.CompraVendita[]> GetVenditeAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAcquisti", ReplyAction="http://tempuri.org/IServiceServer/GetAcquistiResponse")]
        MVCWebSite.ServiceReferenceServer.CompraVendita[] GetAcquisti(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAcquisti", ReplyAction="http://tempuri.org/IServiceServer/GetAcquistiResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.CompraVendita[]> GetAcquistiAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAllUsers", ReplyAction="http://tempuri.org/IServiceServer/GetAllUsersResponse")]
        MVCWebSite.ServiceReferenceServer.Credenziali[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetAllUsers", ReplyAction="http://tempuri.org/IServiceServer/GetAllUsersResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Credenziali[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/EnableDisableUser", ReplyAction="http://tempuri.org/IServiceServer/EnableDisableUserResponse")]
        bool EnableDisableUser(MVCWebSite.ServiceReferenceServer.Utente user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/EnableDisableUser", ReplyAction="http://tempuri.org/IServiceServer/EnableDisableUserResponse")]
        System.Threading.Tasks.Task<bool> EnableDisableUserAsync(MVCWebSite.ServiceReferenceServer.Utente user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetRoleOfUser", ReplyAction="http://tempuri.org/IServiceServer/GetRoleOfUserResponse")]
        string GetRoleOfUser(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetRoleOfUser", ReplyAction="http://tempuri.org/IServiceServer/GetRoleOfUserResponse")]
        System.Threading.Tasks.Task<string> GetRoleOfUserAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AccreditoVendite", ReplyAction="http://tempuri.org/IServiceServer/AccreditoVenditeResponse")]
        bool AccreditoVendite(MVCWebSite.ServiceReferenceServer.Credenziali credenziali);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AccreditoVendite", ReplyAction="http://tempuri.org/IServiceServer/AccreditoVenditeResponse")]
        System.Threading.Tasks.Task<bool> AccreditoVenditeAsync(MVCWebSite.ServiceReferenceServer.Credenziali credenziali);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetUserState", ReplyAction="http://tempuri.org/IServiceServer/GetUserStateResponse")]
        bool GetUserState(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetUserState", ReplyAction="http://tempuri.org/IServiceServer/GetUserStateResponse")]
        System.Threading.Tasks.Task<bool> GetUserStateAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetInformationUser", ReplyAction="http://tempuri.org/IServiceServer/GetInformationUserResponse")]
        MVCWebSite.ServiceReferenceServer.Credenziali GetInformationUser(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetInformationUser", ReplyAction="http://tempuri.org/IServiceServer/GetInformationUserResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Credenziali> GetInformationUserAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/UpdateInformationUser", ReplyAction="http://tempuri.org/IServiceServer/UpdateInformationUserResponse")]
        bool UpdateInformationUser(MVCWebSite.ServiceReferenceServer.Credenziali userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/UpdateInformationUser", ReplyAction="http://tempuri.org/IServiceServer/UpdateInformationUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateInformationUserAsync(MVCWebSite.ServiceReferenceServer.Credenziali userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckOldPassword", ReplyAction="http://tempuri.org/IServiceServer/CheckOldPasswordResponse")]
        bool CheckOldPassword(string ID, string passw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckOldPassword", ReplyAction="http://tempuri.org/IServiceServer/CheckOldPasswordResponse")]
        System.Threading.Tasks.Task<bool> CheckOldPasswordAsync(string ID, string passw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AddValutazione", ReplyAction="http://tempuri.org/IServiceServer/AddValutazioneResponse")]
        bool AddValutazione(MVCWebSite.ServiceReferenceServer.Valutazione valutazione);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/AddValutazione", ReplyAction="http://tempuri.org/IServiceServer/AddValutazioneResponse")]
        System.Threading.Tasks.Task<bool> AddValutazioneAsync(MVCWebSite.ServiceReferenceServer.Valutazione valutazione);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckIfUserBoughtProduct", ReplyAction="http://tempuri.org/IServiceServer/CheckIfUserBoughtProductResponse")]
        bool CheckIfUserBoughtProduct(string userId, string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckIfUserBoughtProduct", ReplyAction="http://tempuri.org/IServiceServer/CheckIfUserBoughtProductResponse")]
        System.Threading.Tasks.Task<bool> CheckIfUserBoughtProductAsync(string userId, string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetValutazioni", ReplyAction="http://tempuri.org/IServiceServer/GetValutazioniResponse")]
        MVCWebSite.ServiceReferenceServer.Valutazione[] GetValutazioni(string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetValutazioni", ReplyAction="http://tempuri.org/IServiceServer/GetValutazioniResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Valutazione[]> GetValutazioniAsync(string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetLastSales", ReplyAction="http://tempuri.org/IServiceServer/GetLastSalesResponse")]
        MVCWebSite.ServiceReferenceServer.Prodotto[] GetLastSales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/GetLastSales", ReplyAction="http://tempuri.org/IServiceServer/GetLastSalesResponse")]
        System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto[]> GetLastSalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/WriteLogout", ReplyAction="http://tempuri.org/IServiceServer/WriteLogoutResponse")]
        void WriteLogout(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/WriteLogout", ReplyAction="http://tempuri.org/IServiceServer/WriteLogoutResponse")]
        System.Threading.Tasks.Task WriteLogoutAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckIfUserAlreadyEvaluated", ReplyAction="http://tempuri.org/IServiceServer/CheckIfUserAlreadyEvaluatedResponse")]
        bool CheckIfUserAlreadyEvaluated(string userId, string ASIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceServer/CheckIfUserAlreadyEvaluated", ReplyAction="http://tempuri.org/IServiceServer/CheckIfUserAlreadyEvaluatedResponse")]
        System.Threading.Tasks.Task<bool> CheckIfUserAlreadyEvaluatedAsync(string userId, string ASIN);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceServerChannel : MVCWebSite.ServiceReferenceServer.IServiceServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceServerClient : System.ServiceModel.ClientBase<MVCWebSite.ServiceReferenceServer.IServiceServer>, MVCWebSite.ServiceReferenceServer.IServiceServer {
        
        public ServiceServerClient() {
        }
        
        public ServiceServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool VerifyUserIdentity(MVCWebSite.ServiceReferenceServer.Credenziali user) {
            return base.Channel.VerifyUserIdentity(user);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyUserIdentityAsync(MVCWebSite.ServiceReferenceServer.Credenziali user) {
            return base.Channel.VerifyUserIdentityAsync(user);
        }
        
        public string GetIDActiveUser(MVCWebSite.ServiceReferenceServer.Credenziali user) {
            return base.Channel.GetIDActiveUser(user);
        }
        
        public System.Threading.Tasks.Task<string> GetIDActiveUserAsync(MVCWebSite.ServiceReferenceServer.Credenziali user) {
            return base.Channel.GetIDActiveUserAsync(user);
        }
        
        public bool AddUserWithTransaction(MVCWebSite.ServiceReferenceServer.Credenziali userInfo) {
            return base.Channel.AddUserWithTransaction(userInfo);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserWithTransactionAsync(MVCWebSite.ServiceReferenceServer.Credenziali userInfo) {
            return base.Channel.AddUserWithTransactionAsync(userInfo);
        }
        
        public MVCWebSite.ServiceReferenceServer.Carrello[] GetAllElementCarrello(MVCWebSite.ServiceReferenceServer.Credenziali user) {
            return base.Channel.GetAllElementCarrello(user);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Carrello[]> GetAllElementCarrelloAsync(MVCWebSite.ServiceReferenceServer.Credenziali user) {
            return base.Channel.GetAllElementCarrelloAsync(user);
        }
        
        public MVCWebSite.ServiceReferenceServer.Prodotto[] GetAllProdottiSeller(MVCWebSite.ServiceReferenceServer.Credenziali user) {
            return base.Channel.GetAllProdottiSeller(user);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto[]> GetAllProdottiSellerAsync(MVCWebSite.ServiceReferenceServer.Credenziali user) {
            return base.Channel.GetAllProdottiSellerAsync(user);
        }
        
        public MVCWebSite.ServiceReferenceServer.Prodotto[] GetAllProdotti(string id) {
            return base.Channel.GetAllProdotti(id);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto[]> GetAllProdottiAsync(string id) {
            return base.Channel.GetAllProdottiAsync(id);
        }
        
        public MVCWebSite.ServiceReferenceServer.Prodotto GetSingleProduct(string ASIN) {
            return base.Channel.GetSingleProduct(ASIN);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto> GetSingleProductAsync(string ASIN) {
            return base.Channel.GetSingleProductAsync(ASIN);
        }
        
        public MVCWebSite.ServiceReferenceServer.Prodotto[] GetProductByCategory(string Categoria) {
            return base.Channel.GetProductByCategory(Categoria);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto[]> GetProductByCategoryAsync(string Categoria) {
            return base.Channel.GetProductByCategoryAsync(Categoria);
        }
        
        public bool AddProdotto(MVCWebSite.ServiceReferenceServer.Prodotto prodotto) {
            return base.Channel.AddProdotto(prodotto);
        }
        
        public System.Threading.Tasks.Task<bool> AddProdottoAsync(MVCWebSite.ServiceReferenceServer.Prodotto prodotto) {
            return base.Channel.AddProdottoAsync(prodotto);
        }
        
        public bool DeleteProdotto(MVCWebSite.ServiceReferenceServer.Prodotto prodotto) {
            return base.Channel.DeleteProdotto(prodotto);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProdottoAsync(MVCWebSite.ServiceReferenceServer.Prodotto prodotto) {
            return base.Channel.DeleteProdottoAsync(prodotto);
        }
        
        public bool UpdateProdotto(MVCWebSite.ServiceReferenceServer.Prodotto prodotto) {
            return base.Channel.UpdateProdotto(prodotto);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProdottoAsync(MVCWebSite.ServiceReferenceServer.Prodotto prodotto) {
            return base.Channel.UpdateProdottoAsync(prodotto);
        }
        
        public bool AddCartProduct(MVCWebSite.ServiceReferenceServer.Carrello carrello) {
            return base.Channel.AddCartProduct(carrello);
        }
        
        public System.Threading.Tasks.Task<bool> AddCartProductAsync(MVCWebSite.ServiceReferenceServer.Carrello carrello) {
            return base.Channel.AddCartProductAsync(carrello);
        }
        
        public int CheckIfAlreadyExistInCartUser(MVCWebSite.ServiceReferenceServer.Carrello carrello) {
            return base.Channel.CheckIfAlreadyExistInCartUser(carrello);
        }
        
        public System.Threading.Tasks.Task<int> CheckIfAlreadyExistInCartUserAsync(MVCWebSite.ServiceReferenceServer.Carrello carrello) {
            return base.Channel.CheckIfAlreadyExistInCartUserAsync(carrello);
        }
        
        public bool UpdateCartProduct(MVCWebSite.ServiceReferenceServer.Carrello carrello) {
            return base.Channel.UpdateCartProduct(carrello);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCartProductAsync(MVCWebSite.ServiceReferenceServer.Carrello carrello) {
            return base.Channel.UpdateCartProductAsync(carrello);
        }
        
        public double GetCredito(string ID) {
            return base.Channel.GetCredito(ID);
        }
        
        public System.Threading.Tasks.Task<double> GetCreditoAsync(string ID) {
            return base.Channel.GetCreditoAsync(ID);
        }
        
        public bool CheckIfQtIsOk(string ASIN, int qt) {
            return base.Channel.CheckIfQtIsOk(ASIN, qt);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIfQtIsOkAsync(string ASIN, int qt) {
            return base.Channel.CheckIfQtIsOkAsync(ASIN, qt);
        }
        
        public bool DeleteProductFromCart(MVCWebSite.ServiceReferenceServer.Carrello carrello) {
            return base.Channel.DeleteProductFromCart(carrello);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductFromCartAsync(MVCWebSite.ServiceReferenceServer.Carrello carrello) {
            return base.Channel.DeleteProductFromCartAsync(carrello);
        }
        
        public bool UpdatePortafoglio(MVCWebSite.ServiceReferenceServer.Utente utente) {
            return base.Channel.UpdatePortafoglio(utente);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePortafoglioAsync(MVCWebSite.ServiceReferenceServer.Utente utente) {
            return base.Channel.UpdatePortafoglioAsync(utente);
        }
        
        public int GetProductQtAviable(string ASIN) {
            return base.Channel.GetProductQtAviable(ASIN);
        }
        
        public System.Threading.Tasks.Task<int> GetProductQtAviableAsync(string ASIN) {
            return base.Channel.GetProductQtAviableAsync(ASIN);
        }
        
        public bool ShopProducts(MVCWebSite.ServiceReferenceServer.Credenziali utente) {
            return base.Channel.ShopProducts(utente);
        }
        
        public System.Threading.Tasks.Task<bool> ShopProductsAsync(MVCWebSite.ServiceReferenceServer.Credenziali utente) {
            return base.Channel.ShopProductsAsync(utente);
        }
        
        public MVCWebSite.ServiceReferenceServer.CompraVendita[] GetVendite(string ID) {
            return base.Channel.GetVendite(ID);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.CompraVendita[]> GetVenditeAsync(string ID) {
            return base.Channel.GetVenditeAsync(ID);
        }
        
        public MVCWebSite.ServiceReferenceServer.CompraVendita[] GetAcquisti(string ID) {
            return base.Channel.GetAcquisti(ID);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.CompraVendita[]> GetAcquistiAsync(string ID) {
            return base.Channel.GetAcquistiAsync(ID);
        }
        
        public MVCWebSite.ServiceReferenceServer.Credenziali[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Credenziali[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public bool EnableDisableUser(MVCWebSite.ServiceReferenceServer.Utente user) {
            return base.Channel.EnableDisableUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> EnableDisableUserAsync(MVCWebSite.ServiceReferenceServer.Utente user) {
            return base.Channel.EnableDisableUserAsync(user);
        }
        
        public string GetRoleOfUser(string ID) {
            return base.Channel.GetRoleOfUser(ID);
        }
        
        public System.Threading.Tasks.Task<string> GetRoleOfUserAsync(string ID) {
            return base.Channel.GetRoleOfUserAsync(ID);
        }
        
        public bool AccreditoVendite(MVCWebSite.ServiceReferenceServer.Credenziali credenziali) {
            return base.Channel.AccreditoVendite(credenziali);
        }
        
        public System.Threading.Tasks.Task<bool> AccreditoVenditeAsync(MVCWebSite.ServiceReferenceServer.Credenziali credenziali) {
            return base.Channel.AccreditoVenditeAsync(credenziali);
        }
        
        public bool GetUserState(string ID) {
            return base.Channel.GetUserState(ID);
        }
        
        public System.Threading.Tasks.Task<bool> GetUserStateAsync(string ID) {
            return base.Channel.GetUserStateAsync(ID);
        }
        
        public MVCWebSite.ServiceReferenceServer.Credenziali GetInformationUser(string ID) {
            return base.Channel.GetInformationUser(ID);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Credenziali> GetInformationUserAsync(string ID) {
            return base.Channel.GetInformationUserAsync(ID);
        }
        
        public bool UpdateInformationUser(MVCWebSite.ServiceReferenceServer.Credenziali userinfo) {
            return base.Channel.UpdateInformationUser(userinfo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInformationUserAsync(MVCWebSite.ServiceReferenceServer.Credenziali userinfo) {
            return base.Channel.UpdateInformationUserAsync(userinfo);
        }
        
        public bool CheckOldPassword(string ID, string passw) {
            return base.Channel.CheckOldPassword(ID, passw);
        }
        
        public System.Threading.Tasks.Task<bool> CheckOldPasswordAsync(string ID, string passw) {
            return base.Channel.CheckOldPasswordAsync(ID, passw);
        }
        
        public bool AddValutazione(MVCWebSite.ServiceReferenceServer.Valutazione valutazione) {
            return base.Channel.AddValutazione(valutazione);
        }
        
        public System.Threading.Tasks.Task<bool> AddValutazioneAsync(MVCWebSite.ServiceReferenceServer.Valutazione valutazione) {
            return base.Channel.AddValutazioneAsync(valutazione);
        }
        
        public bool CheckIfUserBoughtProduct(string userId, string ASIN) {
            return base.Channel.CheckIfUserBoughtProduct(userId, ASIN);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIfUserBoughtProductAsync(string userId, string ASIN) {
            return base.Channel.CheckIfUserBoughtProductAsync(userId, ASIN);
        }
        
        public MVCWebSite.ServiceReferenceServer.Valutazione[] GetValutazioni(string ASIN) {
            return base.Channel.GetValutazioni(ASIN);
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Valutazione[]> GetValutazioniAsync(string ASIN) {
            return base.Channel.GetValutazioniAsync(ASIN);
        }
        
        public MVCWebSite.ServiceReferenceServer.Prodotto[] GetLastSales() {
            return base.Channel.GetLastSales();
        }
        
        public System.Threading.Tasks.Task<MVCWebSite.ServiceReferenceServer.Prodotto[]> GetLastSalesAsync() {
            return base.Channel.GetLastSalesAsync();
        }
        
        public void WriteLogout(string user) {
            base.Channel.WriteLogout(user);
        }
        
        public System.Threading.Tasks.Task WriteLogoutAsync(string user) {
            return base.Channel.WriteLogoutAsync(user);
        }
        
        public bool CheckIfUserAlreadyEvaluated(string userId, string ASIN) {
            return base.Channel.CheckIfUserAlreadyEvaluated(userId, ASIN);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIfUserAlreadyEvaluatedAsync(string userId, string ASIN) {
            return base.Channel.CheckIfUserAlreadyEvaluatedAsync(userId, ASIN);
        }
    }
}
